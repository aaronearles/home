services:
  app:
    image: fireflyiii/core:latest
    hostname: app
    container_name: firefly-core
    restart: unless-stopped
    volumes:
      # - firefly_iii_upload:/var/www/html/storage/upload
      - ./upload:/var/www/html/storage/upload
    env_file: .env
    networks:
     - traefik
     - backend
      # - firefly_iii
    # ports:
    #   - 80:8080
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.firefly.rule=Host(`firefly.internal.earles.io`)
      - traefik.http.routers.firefly.entrypoints=websecure
      - traefik.http.routers.firefly.tls.certresolver=production
    depends_on:
      - db
  db:
    image: mariadb:lts
    hostname: db
    container_name: firefly-db
    restart: always
    env_file: .db.env
    networks:
      # - firefly_iii
       - backend
    volumes:
      # - firefly_iii_db:/var/lib/mysql
      - ./db:/var/lib/mysql

  importer:
    image: fireflyiii/data-importer:latest
    hostname: importer
    restart: unless-stopped
    container_name: firefly_iii_importer
    networks:
     - traefik
     - backend
    # ports:
    #   - '81:8080'
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.firefly-importer.rule=Host(`firefly-importer.internal.earles.io`)
      - traefik.http.routers.firefly-importer.entrypoints=websecure
      - traefik.http.routers.firefly-importer.tls.certresolver=production
    depends_on:
      - app
    env_file: .importer.env

  cron:
    #
    # To make this work, set STATIC_CRON_TOKEN in your .env file or as an environment variable and replace REPLACEME below
    # The STATIC_CRON_TOKEN must be *exactly* 32 characters long
    #
    image: alpine
    restart: unless-stopped
    container_name: firefly-cron
    env_file: .env
    command: sh -c "
      apk add tzdata
      && ln -s /usr/share/zoneinfo/${TZ} /etc/localtime
      | echo \"0 3 * * * wget -qO- http://app:8080/api/v1/cron/CnTyYrf6dN6jnZGjPz9zScou4JawHJt4;echo\"
      | crontab -
      && crond -f -L /dev/stdout"
    networks:
      # - firefly_iii
       - backend

# volumes:
#    firefly_iii_upload:
#    firefly_iii_db:

networks:
  # firefly_iii:
  #   driver: bridge
  traefik:
    external: true
  backend:
    external: false